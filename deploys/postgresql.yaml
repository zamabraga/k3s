---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: postgresql-storage
provisioner: rancher.io/local-path
reclaimPolicy: Retain
volumeBindingMode: WaitForFirstConsumer
---
kind: PersistentVolume
apiVersion: v1
metadata:
  name: postgresql-pv
  namespace: postgresql
spec:
  storageClassName: postgresql-storage
  persistentVolumeReclaimPolicy: Retain
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteMany
  hostPath:
    path: "/mnt/storage/k3s/common/postgresql"
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  namespace: postgresql
  name: pvc-postgresql
spec:
  storageClassName: postgresql-storage
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 10Gi
---
apiVersion: v1
kind: Secret
metadata:
  name: postgresql-password
  namespace: postgresql
data:
  POSTGRES_PASSWORD: cTF3MmUzCg==
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgresql-configmap
  namespace: postgresql
data:
  POSTGRESQL_PORT_NUMBER: "5432"
  PGDATA: /var/lib/postgresql/data/pgdata
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgresql-stateful-set
  namespace: postgresql
  labels:
    name: postgres-stateful-set
spec:
  replicas: 1
  serviceName: postgresql-stateful-set
  updateStrategy:
    rollingUpdate: {}
    type: RollingUpdate
  selector:
    matchLabels:
      app: postgresql
  template:
    metadata:
      labels:
        app: postgresql
    spec:
      containers:
        - name: postgresql
          image: docker.io/postgres:14.2-alpine
          envFrom:
            - configMapRef:
                name: postgresql-configmap
            - secretRef:
                name: postgresql-password
          ports:
            - name: tcp-postgresql
              containerPort: 5432
          livenessProbe:
            failureThreshold: 6
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
            exec:
              command:
                - /bin/sh
                - -c
                - exec pg_isready -U "rootAdmin" -h 127.0.0.1 -p 5432 -d rootDefault
          readinessProbe:
            failureThreshold: 6
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
            exec:
              command:
                - /bin/sh
                - -c
                - -e
                - exec pg_isready -U "rootAdmin" -h 127.0.0.1 -p 5432 -d rootDefault
          resources:
            limits:
              memory: "300Mi"
              cpu: "300m"
            requests:
              cpu: 250m
              memory: 256Mi
          volumeMounts:
            - name: dshm
              mountPath: /dev/shm
            - name: postgresql-data
              mountPath: /var/lib/postgresql
      volumes:
        - name: dshm
          emptyDir:
            medium: Memory
  volumeClaimTemplates:
    - metadata:
        name: postgresql-data
      spec:
        storageClassName: postgresql-storage
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "10Gi"
---
kind: Service
apiVersion: v1
metadata:
  name: postgresql-svc
  namespace: postgresql
spec:
  selector:
    app: postgresql
  type: ClusterIP
  clusterIP: None
  ports:
    - name: tcp-postgresql
      port: 5432
      protocol: TCP
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRouteTCP
metadata:
  name: postgresql-ingress
  namespace: postgresql
spec:
  entryPoints:
    - web
  routes:
    match: HostSNI(`*`)
    services:
      - name: postgresql-svc
        port: 5432
